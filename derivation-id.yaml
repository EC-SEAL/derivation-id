swagger: '2.0' #Be aware of the version.
info:
  title: Derivation Microservice Spec
  version: 0.0.2
  description: "This document contains the formal specification of all standard module interfaces in SEAL Service. Take into account that parameters marked as cookie type, will instead be passed through the session object**
  "
  



  


tags:

    - name: "IDBootstrapping"
      description: ""

paths:
  
  
####### IDBootstrapping #######

  /idboot/generate:
    post:
      tags:
        - IDBootstrapping
      summary: Generate a new identity in session and link it to the authenticated identity.
      description: _
      consumes:
      - "application/x-www-form-urlencoded"
      produces:
      - "application/json"
      parameters:
        - name: "msToken"
          in: "formData"
          description: The security token for ms to ms calls
          required: true
          type: string
      responses:
        200:
          description: "Identity generated"
          schema:
            $ref: "#/definitions/dataSet"
        404:
          description: "Error bootstrapping identity"


          
  
  
  
      
definitions:


####### SessionManager ########


  MngrSessionTO:
    type: object
    required: [sessionId]
    properties:
      sessionId:
        type: string
      sessionVariables:
        type: object
    title: MngrSessionTO

  SessionMngrResponse:
    type: object
    properties:
      additionalData:
        type: string
      code:
        type: string
        enum:
          - OK
          - ERROR
          - NEW
      error:
        type: string
      sessionData:
        $ref: '#/definitions/MngrSessionTO'
    title: SessionMngrResponse



        

        
  attributeType:
    description: Contents of an attribute item.
    type: object
    properties:
      name:
        description: Unique class identifier of the attribute
        type: string
        example: "http://eidas.europa.eu/attributes/naturalperson/CurrentGivenName"
      friendlyName:
        description: Class identifier of the attribute (short version, might have collisions)
        type: string
        example: "CurrentGivenName"
      encoding:
        description: String identifying the encoding method:"UTF-8" , "BASE64", etc.
        type: string
        example: "plain"
      language:
        description: String identifying the language code of the value contents
        type: string
        example: "ES_es"
      mandatory:
        description: To mark the mandatoriness of the attribute.
        type: boolean
        example: true
      values:
        description: List of values for the attribute
        type: array
        items:
          type: string
        example: ["JOHN"]


  attributeTypeList:
      type: array
      items: 
        $ref: '#/definitions/attributeType'



        
####### RequestManager #######

 # Descriptor Object for an Attribute Set (a data request or response)
  attributeSet:
    description: Object representing a generic request/response. Used for in-application transference of the security assertions or claims containing trusted user information (attribute values); also to set the list of attributes to be requested.
    type: object
    properties:
      id:
        description: Unique identifier of the set
        type: string
        example: "6c0f70a8-f32b-4535-b5f6-0d596c52813a"
      type:
        description: Kind of set
        type: string
        enum:
            - Request
            - Response
            - AuthResponse
        example: "Response"
      issuer:
        description: ID of the External Entity which issued the set
        type: string
        example: "https://esmo.uji.es/gw/saml/idp/metadata.xml"
      recipient:
        description: ID of the External Entity which the set is addressed to
        type: string
        example: "https://esmo.uji.es/gw/saml/sp/metadata.xml"
      inResponseTo:
        description: In response objects, the ID of the request which the set is responding to
        type: string
        example: "aaaa70a8-f32b-4535-b5f6-0d596cbbbbb"
      loa:
        description: Level of trust of the authentication related to the set, if it is a response for an eIDAS authentication request
        type: string
        example: "http://eidas.europa.eu/LoA/substantial"
      notBefore:
        description: Minimum validity date of the set
        type: string
        example: "2018-12-06T19:40:16Z"
      notAfter:
        description: Maximum validity date of the set
        type: string
        example: "2018-12-06T19:45:16Z"
      status:
        description: "To represent the tatus of the set (ok, error, etc.)."
        $ref: '#/definitions/attributeSetStatus'
      attributes:
        description: The list of the attributes or claims related to the user, contained on the set
        type: array
        items:
            $ref: '#/definitions/attributeType'
      properties:
        description: Dictionary of additional fields of data related to the attributes in the set(strings only), specific for a certain entity type or protocol. List of useful metadata related to the attributes and any specific information that came with the remote SP/RP request (or was filled in with metadata stored presets for said SP/RP) and might be of need for some implementation of the local SP to issue the authentication request.
        type: object
        #Indicates free-form object
        additionalProperties:
            type: string       

            
  attributeSetStatus:
    type: object
    properties:
      code:
        description: main standard status code from a closed list.
        type: string
        enum:
            - OK
            - ERROR
      subcode:
        description: free text field to represent status codes, open for specific applications or fluxes.
        type: string
      message:
        description: a free text string to provide human-readable status-error information
        type: string

            
            
  attributeSetList:
      type: array
      items: 
        $ref: '#/definitions/attributeSet'


        
  attributeMap:
    description: Represent semantic equivalence relationships between attribute groups. Groups can be either single attributes or formed by regexp transformation (match and replace) of the result of concatenation of attributes and literal strings.
    type: object
    properties:
      description:
        description: Name or explain the mapping
        type: string
      pairings:
        description: A list of groups that are semantically equivalent
        type: array
        items:
          type: object
          properties:
            profile:
              description: Attribute profile which this group belongs to
              example: eIDAS
              type: string
            issuer:
              description: ID of the entity that emmitted the attributes on this group. If specified, this equivalence will only apply to attributes coming from the correspondign issuer
              example: http://clave.redsara.es/
              type: string
            attributes:
              description: Array of attribute names (can be a single one) and/or string literals that will concatenate to form the group. Items starting with $ will be considered as attribute names, and will be substitutied by its value. Literal strings starting with $ must escape it "\$"
              example:  ["$surname1","#","$surname2"]
              type: array
              items:
                type: string
            regexp:
              description: If set, the result of the concatenation will be matched towards this PERL compatible regexp (no match will return an empty string). Can be used to transform or to ensure a given format.
              example: "^(-,a-zA-Z)+#(-,a-zA-Z)+$"
              type: string
            replace:
              description: If set, this is what will be returned after matching the regexp. Sub-match numeric placeholders can be used as in a PERL compatible regexp.
              example: \1 \2
              type: string 
            
    
  attributeMapList:
    type: array
    items: 
      $ref: '#/definitions/attributeMap'




####### Persistence #######



  dataSet:
    description: Object representing a generic identity data set, retrieved from some source and stored on a user store.
    type: object
    properties:
      id:
        description: Unique identifier of the set
        type: string
        example: "6c0f70a8-f32b-4535-b5f6-0d596c52813a"
      type:
        description: To define different kinds of datasets, to establish classifications
        type: string
      categories:
        description: To define multiple classes where the data set can be grouped.
        type: array
        items:
          type: string
      issuerId:
        description: Name of the attribute that is the ID of the entity that issued the data set, a kind of pointer to the property ID.
        type: string
      subjectId:
        description: Name of the attribute that is the ID of the data owner, a kind of pointer to the attribute ID.
        type: string
      loa:
        description: Level of assurance of the authenticity of the data/authentication
        type: string
      issued:
        description: Date when the data set was retrieved from its source
        type: string
        example: "2018-12-06T19:40:16Z"
      expiration:
        description: Maximum validity date of the set (empty means permanent)
        type: string
        example: "2018-12-06T19:45:16Z"
      attributes:
        description: The list of the identity attributes or claims contained on the set
        type: array
        items:
            $ref: '#/definitions/attributeType'
      properties:
        description: Dictionary of additional fields of data related to the attributes in the set(strings only) for any specific purpose.
        type: object
        #Indicates free-form object
        additionalProperties:
            type: string       

 

  dataStore:
    type: object
    description: Represents a clear, encrypted and/or signed data set.
    properties:
      id:
        description: Unique identifier of the set
        type: string
        example: "6c0f70a8-f32b-4535-b5f6-0d596c52813a"
      encryptedData:
        type: string
        description: If the data store is encrypted, this will be set. B64 string
      signature:
        type: string
        description: If the data store is signed, signature goes here. B64 string. Sign always the decrypted dataset.
      signatureAlgorithm:
        type: string
        description: Descriptor of the signature algorithm used.
      encryptionAlgorithm:
        description: Descriptor of the encryption algorithm used.
        type: string
      clearData:
        description: If the data store is in cleartext, this will be set
        type: array
        items: 
          $ref: '#/definitions/dataSet'



    
####### IDLinking #######

  fileObject:
    type: object
    properties:
      filename:
        type: string
      fileID:
        type: string
      contentType:
        type: string
        description: MIME type of the file content
      fileSize:
        type: integer
      content:
        type: string
        format: byte    
        description: If not empty, the b64 encoded content of the file.



  fileList:
    description: List of file metadata objects
    type: array
    items:
      $ref: '#/definitions/fileObject'



  linkRequest:
    description: Represents a linking request, as well as its resolution and the resulting linking dataset
    type: object
    properties:
      id:
        description: Unique identifier of the set
        type: string
        example: "6c0f70a8-f32b-4535-b5f6-0d596c52813a"
      issuer:
        description: Name of the entity that issued the link.
        type: string
      lloa: 
        description: Level of certainty that both subjects are the same person
        type: string
      issued:
        description: Date when the link was certified (the date this data set was issued)
        type: string
        example: "2018-12-06T19:40:16Z"
      type:
        description: Type of set.
        type: string
      expiration:
        description: Maximum validity date of the link (empty means permanent)
        type: string
        example: "2018-12-06T19:45:16Z"
      datasetA:
        description: The dataset containing identity attributes or claims set A
        $ref: '#/definitions/dataSet'
      datasetB:
        description: The dataset containing identity attributes or claims set B
        $ref: '#/definitions/dataSet'
      evidence:
        type: array
        description: List of additional files uploaded to the validator to check the person behind the identities
        items:
            $ref: '#/definitions/fileObject'
      conversation:
        type: array
        description: List of messages exchanged between the requester and the validation officer
        items:
            $ref: '#/definitions/message'



  linkRequestList:
    description: List of linking requests
    type: array
    items:
      $ref: '#/definitions/linkRequest'




  message:
    type: object
    properties:
      timestamp:
        type: integer
        description: date and time when the message was sent
      sender:
        type: string
        description: Identifier of the user who sent the message
      senderType:
        type: string
        description: Identifier of the user category who sent the message
      recipient:
        type: string
        description: Identifier of the user whom the message is addressed to
      recipientType:
        type: string
        description: Identifier of the user category whom the message is addressed to
      message:
        type: string
        description: Content of the message


  conversation:
    description: List of messages exchanged between two users
    type: array
    items:
      $ref: '#/definitions/message'



 
            
####### IDBootstrapping #######
####### APIGatewayLink #######
####### VerifiableClaimIssuing #######
####### APIGatewaySP #######
####### SPService #######
####### AuthenticationSource #######
####### IdentitySource #######


####### Revocation #######

  revocationList: ## TODO
    type: object



  displayableList:
    type: array
    items:
      type: object #Generic object, collections will be from a
                   #base common "displayable" class, but I think this does not
                   #support inheritance
  




    









